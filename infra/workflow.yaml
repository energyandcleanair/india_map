main:
  params: [args]
  steps:
    # Initialize environment and continue-from plumbing
    - init_env:
        assign:
          - common_env:
              GCP_PROJECT: vital-form-455413-p8
              INDIA_SHAPEFILE_ASSET: projects/vital-form-455413-p8
              CSV_BUCKET_NAME: crea-ee-csv-buffer
              INGEST_ARCHIVE_BUCKET_NAME: crea-pm25ml-ingest-archive
              COMBINED_BUCKET_NAME: crea-pm25ml-combined
              MODEL_STORAGE_BUCKET_NAME: crea-pm25ml-models
              SPATIAL_COMPUTATION_VALUE_COLUMN_REGEX: "^era5_land__.*$"
              TQDM_DISABLE: "1"
              START_MONTH: "2018-08-01"
              END_MONTH: "2025-03-01"
              RUNNING_IN_CLOUD_BATCH: "true"
          # Extract continue_from arg (string stage name); if empty, start at first step
          - continue_from: ${ default(map.get(args, "continue_from"), "collect_data_and_combine") }

    # Single dispatcher: jump directly to requested starting step, else proceed from first
    - dispatch_continue_from:
        switch:
          - condition: ${ continue_from == "collect_data_and_combine" }
            next: collect_data_and_combine
          - condition: ${ continue_from == "generate_features" }
            next: generate_features
          - condition: ${ continue_from == "sample" }
            next: sample
          - condition: ${ continue_from == "train" }
            next: check_if_training
          - condition: ${ continue_from == "impute" }
            next: impute
          - condition: ${ continue_from == "full_model_sample" }
            next: full_model_sample
          - condition: ${ continue_from == "full_model_train" }
            next: full_model_train
        next: invalid_continue_from

    - invalid_continue_from:
        raise: '${ "Invalid continue_from value: " + string(continue_from) }'

    - collect_data_and_combine:
        call: googleapis.run.v1.namespaces.jobs.run
        args:
          name: namespaces/vital-form-455413-p8/jobs/pm25ml
          location: europe-west1
          connector_params:
            timeout: 86400
          body:
            overrides:
              containerOverrides:
                - args:
                    - python
                    - -m
                    - pm25ml.run.fetch_and_combine
        result: run_job_result

    - generate_features:
        call: googleapis.batch.v1.projects.locations.jobs.create
        args:
          parent: projects/vital-form-455413-p8/locations/europe-west1
          jobId: ${"pm25ml-feature-" + string(int(sys.now()))}
          connector_params:
            timeout: 10800
          body:
            allocationPolicy:
              serviceAccount:
                email: pm25ml@vital-form-455413-p8.iam.gserviceaccount.com
              instances:
                - policy:
                    machineType: n4-standard-8     # 8 vCPU / 32 GiB
                    provisioningModel: SPOT        # pre-emptible
            taskGroups:
              - taskCount: 1
                taskSpec:
                  runnables:
                    - container:
                        imageUri: europe-west1-docker.pkg.dev/vital-form-455413-p8/pm25ml/pm25ml:latest
                        commands:
                          - python
                          - -m
                          - pm25ml.run.generate_features
                      environment:
                        variables: ${common_env}
                  computeResource:
                    memoryMib: 32768               # 32 GiB
                    cpuMilli: 8000                 # 8 vCPU
                  maxRetryCount: 3
            logsPolicy:
              destination: CLOUD_LOGGING
        result: batch_job_result

    - sample:
        call: googleapis.run.v1.namespaces.jobs.run
        args:
          name: namespaces/vital-form-455413-p8/jobs/pm25ml
          location: europe-west1
          connector_params:
            timeout: 10800
          body:
            overrides:
              containerOverrides:
                - args:
                    - python
                    - -m
                    - pm25ml.run.sample_for_imputation
        result: run_job_result

    - check_if_training:
        switch:
          - condition: ${ default(map.get(args, "do_training"), true) }
            next: train
        next: end

    - train:
        parallel:
          for:
            value: model
            in:
              - aod
              - co
              - no2
            steps:
              - train_model:
                  call: googleapis.batch.v1.projects.locations.jobs.create
                  args:
                    parent: projects/vital-form-455413-p8/locations/europe-west1
                    jobId: ${"train-" + model + string(int(sys.now()))}
                    connector_params:
                      timeout: 10800
                    body:
                      allocationPolicy:
                        serviceAccount:
                          email: pm25ml@vital-form-455413-p8.iam.gserviceaccount.com
                        instances:
                          - policy:
                              machineType: c2d-highcpu-112
                              provisioningModel: SPOT
                            
                      taskGroups:
                        - taskCount: 1
                          taskSpec:
                            runnables:
                              - container:
                                  imageUri: europe-west1-docker.pkg.dev/vital-form-455413-p8/pm25ml/pm25ml:latest
                                  commands:
                                    - python
                                    - -m
                                    - ${"pm25ml.run.train_" + model + "_imputer"}
                                environment:
                                  variables: ${common_env}
                            computeResource:
                              memoryMib: 196608 # 192 GiB
                              cpuMilli: 112000 # 112 vCPU
                            maxRetryCount: 3
                      logsPolicy:
                        destination: CLOUD_LOGGING
                  result: train_job_result

    - impute:
        call: googleapis.batch.v1.projects.locations.jobs.create
        args:
          parent: projects/vital-form-455413-p8/locations/europe-west1
          jobId: ${"pm25ml-feature-" + string(int(sys.now()))}
          connector_params:
            timeout: 10800
          body:
            allocationPolicy:
              serviceAccount:
                email: pm25ml@vital-form-455413-p8.iam.gserviceaccount.com
              instances:
                - policy:
                    # Imputation should run on intel CPUs for use with daal4py
                    machineType: n4-standard-16     # 16 vCPU / 64 GiB
            taskGroups:
              - taskCount: 1
                taskSpec:
                  runnables:
                    - container:
                        imageUri: europe-west1-docker.pkg.dev/vital-form-455413-p8/pm25ml/pm25ml:latest
                        commands:
                          - python
                          - -m
                          - pm25ml.run.impute
                      environment:
                        variables: ${common_env}
                  computeResource:
                    memoryMib: 65536               # 64 GiB
                    cpuMilli: 16000                 # 16 vCPU
                  maxRetryCount: 3
            logsPolicy:
              destination: CLOUD_LOGGING
        result: batch_job_result

    - full_model_sample:
        call: googleapis.run.v1.namespaces.jobs.run
        args:
          name: namespaces/vital-form-455413-p8/jobs/pm25ml
          location: europe-west1
          connector_params:
            timeout: 86400
          body:
            overrides:
              containerOverrides:
                - args:
                    - python
                    - -m
                    - pm25ml.run.prep_for_full_model
        result: run_job_result

    - full_model_train:
        call: googleapis.run.v1.namespaces.jobs.run
        args:
          name: namespaces/vital-form-455413-p8/jobs/pm25ml
          location: europe-west1
          connector_params:
            timeout: 86400
          body:
            overrides:
              containerOverrides:
                - args:
                    - python
                    - -m
                    - pm25ml.run.train_full_model
        result: run_job_result
